import type { InstanceOf } from "../index.js";
import type { IDependencyRegistryEngine } from "./IDependencyRegistryEngine.js";
export declare abstract class AbstractConfigurableDependencyInjector<I> implements IDependencyRegistryEngine {
    protected injector: I | undefined;
    protected useToken: boolean;
    protected _serviceSet: Set<unknown>;
    setInjector(injector: I): this;
    setUseTokenization(useToken: boolean): this;
    abstract addService<T>(classType: T): void;
    abstract getAllServices(): Set<unknown>;
    abstract getService<T>(classType: T): InstanceOf<T> | null;
}
