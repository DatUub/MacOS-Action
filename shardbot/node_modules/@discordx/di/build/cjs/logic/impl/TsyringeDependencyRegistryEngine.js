"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TsyringeDependencyRegistryEngine = void 0;
const AbstractConfigurableDependencyInjector_js_1 = require("../AbstractConfigurableDependencyInjector.js");
class TsyringeDependencyRegistryEngine extends AbstractConfigurableDependencyInjector_js_1.AbstractConfigurableDependencyInjector {
    static token = Symbol("discordx");
    static _instance;
    static get instance() {
        if (!TsyringeDependencyRegistryEngine._instance) {
            TsyringeDependencyRegistryEngine._instance =
                new TsyringeDependencyRegistryEngine();
        }
        return TsyringeDependencyRegistryEngine._instance;
    }
    addService(classType) {
        if (!this.injector) {
            throw new Error("Please set the container!");
        }
        const clazz = classType;
        if (this.useToken) {
            this.injector.registerSingleton(TsyringeDependencyRegistryEngine.token, clazz);
            return;
        }
        this._serviceSet.add(classType);
        this.injector.registerSingleton(clazz);
    }
    getService(classType) {
        if (!this.injector) {
            throw new Error("Please set the container!");
        }
        const clazz = classType;
        if (this.useToken) {
            return (this.injector
                .resolveAll(TsyringeDependencyRegistryEngine.token)
                .find((instance) => instance.constructor === clazz) ?? null);
        }
        return this.injector.resolve(clazz);
    }
    getAllServices() {
        if (!this.injector) {
            throw new Error("Please set the container!");
        }
        if (this.useToken) {
            return new Set(this.injector.resolveAll(TsyringeDependencyRegistryEngine.token));
        }
        const retSet = new Set();
        for (const classRef of this._serviceSet) {
            retSet.add(this.injector.resolve(classRef));
        }
        return retSet;
    }
}
exports.TsyringeDependencyRegistryEngine = TsyringeDependencyRegistryEngine;
//# sourceMappingURL=TsyringeDependencyRegistryEngine.js.map